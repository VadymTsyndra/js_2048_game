{"version":3,"sources":["scripts/main.js"],"names":["board","score","rows","columns","button","document","querySelector","setGame","r","c","tile","createElement","id","toString","updateTile","getElementById","append","hasEmptyTile","setTwo","found","Math","floor","random","innerText","classList","add","loseCheck","num","value","filterZero","argRow","filter","slideCheck","copyRow","i","length","push","slide","slideLeftCheck","result","row1","row2","JSON","stringify","includes","slideLeft","row","toggle","slideRightCheck","slideRight","reverse","slideUpCheck","slideUp","slideDownCheck","slideDown","remove","addEventListener","contains","innerHTML","window","onload","e","code"],"mappings":"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","file":"main.86c10ceb.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet board;\nlet score = 0;\nconst rows = 4;\nconst columns = 4;\n\nconst button = document.querySelector('.start');\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('restart')) {\n    score = 0;\n    document.querySelector('.score').innerText = 0;\n    document.querySelector('.message-lose').classList.add('hidden');\n  }\n\n  document.querySelector('#board').innerHTML = '';\n  setGame();\n  setTwo();\n  setTwo();\n\n  document.querySelector('.message-start').classList.add('hidden');\n\n  button.classList.remove('start');\n  button.classList.add('restart');\n  button.innerText = 'Restart';\n});\n\nwindow.onload = function() {\n  setGame();\n};\n\nfunction setGame() {\n  board = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      const tile = document.createElement('div');\n\n      tile.id = r.toString() + '-' + c.toString();\n\n      const num = board[r][c];\n\n      updateTile(tile, num);\n      document.getElementById('board').append(tile);\n    }\n  }\n}\n\nfunction hasEmptyTile() {\n  for (let r = 0; r < rows; r++) {\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 0) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction setTwo() {\n  if (!hasEmptyTile()) {\n    loseCheck();\n\n    return;\n  }\n\n  let found = false;\n\n  while (!found) {\n    const r = Math.floor(Math.random() * rows);\n    const c = Math.floor(Math.random() * columns);\n\n    if (board[r][c] === 0) {\n      const randomNums = [2, 2, 2, 2, 2, 2, 2, 2, 2, 4];\n\n      board[r][c] = randomNums[Math.floor(Math.random() * 10)];\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n\n      tile.innerText = board[r][c];\n      tile.classList.add('x' + board[r][c].toString());\n      found = true;\n    }\n  }\n}\n\nfunction updateTile(tile, num) {\n  tile.innerText = '';\n  tile.classList.value = '';\n  tile.classList.add('tile');\n\n  if (num > 0) {\n    tile.innerText = num;\n    tile.classList.add('x' + num.toString());\n  }\n}\n\ndocument.addEventListener('keyup', (e) => {\n  if (button.classList.contains('restart')) {\n    switch (e.code) {\n      case 'ArrowLeft':\n        slideLeft();\n        setTwo();\n        break;\n      case 'ArrowRight':\n        slideRight();\n        setTwo();\n        break;\n      case 'ArrowUp':\n        slideUp();\n        setTwo();\n        break;\n      case 'ArrowDown':\n        slideDown();\n        setTwo();\n    }\n  }\n  document.querySelector('.score').innerText = score;\n});\n\nfunction filterZero(argRow) {\n  return argRow.filter(num => num);\n}\n\nfunction slideCheck(argRow) {\n  let copyRow = filterZero(argRow);\n\n  for (let i = 0; i < copyRow.length - 1; i++) {\n    if (copyRow[i] === copyRow[i + 1]) {\n      copyRow[i] *= 2;\n      copyRow[i + 1] = 0;\n    }\n  }\n\n  copyRow = filterZero(copyRow);\n\n  while (copyRow.length < columns) {\n    copyRow.push(0);\n  }\n\n  return copyRow;\n}\n\nfunction slide(argRow) {\n  let copyRow = filterZero(argRow);\n\n  for (let i = 0; i < copyRow.length - 1; i++) {\n    if (copyRow[i] === copyRow[i + 1]) {\n      copyRow[i] *= 2;\n      copyRow[i + 1] = 0;\n      score += copyRow[i];\n    }\n  }\n\n  copyRow = filterZero(copyRow);\n\n  while (copyRow.length < columns) {\n    copyRow.push(0);\n  }\n\n  return copyRow;\n}\n\nfunction slideLeftCheck() {\n  const result = [];\n\n  for (let r = 0; r < rows; r++) {\n    const row1 = [...board[r]];\n\n    const row2 = slideCheck(row1);\n\n    result.push(JSON.stringify(row1) === JSON.stringify(row2));\n  }\n\n  return result.includes(false);\n}\n\nfunction slideLeft() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row = slide(row);\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        document.querySelector('.message-win').classList.toggle('hidden');\n      }\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideRightCheck() {\n  const result = [];\n\n  for (let r = 0; r < rows; r++) {\n    const row1 = [...board[r]];\n\n    const row2 = slideCheck(row1);\n\n    result.push(JSON.stringify(row1) === JSON.stringify(row2));\n  }\n\n  return result.includes(false);\n}\n\nfunction slideRight() {\n  for (let r = 0; r < rows; r++) {\n    let row = board[r];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n    board[r] = row;\n\n    for (let c = 0; c < columns; c++) {\n      if (board[r][c] === 2048) {\n        document.querySelector('.message-win').classList.toggle('hidden');\n      }\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideUpCheck() {\n  const result = [];\n\n  for (let c = 0; c < columns; c++) {\n    const row1 = [...[board[0][c], board[1][c], board[2][c], board[3][c]]];\n\n    const row2 = slideCheck(row1);\n\n    result.push(JSON.stringify(row1) === JSON.stringify(row2));\n  }\n\n  return result.includes(false);\n}\n\nfunction slideUp() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row = slide(row);\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      if (board[r][c] === 2048) {\n        document.querySelector('.message-win').classList.toggle('hidden');\n      }\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction slideDownCheck() {\n  const result = [];\n\n  for (let c = 0; c < columns; c++) {\n    const row1 = [...[board[0][c], board[1][c], board[2][c], board[3][c]]];\n\n    const row2 = slideCheck(row1);\n\n    result.push(JSON.stringify(row1) === JSON.stringify(row2));\n  }\n\n  return result.includes(false);\n}\n\nfunction slideDown() {\n  for (let c = 0; c < columns; c++) {\n    let row = [board[0][c], board[1][c], board[2][c], board[3][c]];\n\n    row.reverse();\n    row = slide(row);\n    row.reverse();\n\n    for (let r = 0; r < rows; r++) {\n      board[r][c] = row[r];\n\n      if (board[r][c] === 2048) {\n        document.querySelector('.message-win').classList.toggle('hidden');\n      }\n\n      const tile = document.getElementById(r.toString() + '-' + c.toString());\n      const num = board[r][c];\n\n      updateTile(tile, num);\n    }\n  }\n}\n\nfunction loseCheck() {\n  if (!slideLeftCheck() && !slideRightCheck()\n       && !slideUpCheck() && !slideDownCheck()) {\n    document.querySelector('.message-lose').classList.remove('hidden');\n  }\n}\n"]}